@using Syncfusion.Blazor.Lists
@using Syncfusion.Blazor.Navigations
@using Syncfusion.Blazor.Buttons
@inject NavigationManager Navigation
@inject Microsoft.AspNetCore.Components.NavigationManager UriHelper;

@inherits LayoutComponentBase

@inject IJSRuntime JSRuntime

<div id="wrapper">
	<div id="header" style="width: 100%">
		<span style="float:left; padding-top:11px;width:2%;">
			<span class='e-icons @custom_menu_arrow' @onclick="MenuButtonClick"></span>
		</span>
		<div class="contentFooter">
			<div class="top-footer">
				<div class="logo-details" style="display:flex;margin-left:auto;justify-content:flex-end;">
					<a href="#" target="_blank" style="width:5%;">
						<img class="imageLogo" src="" alt="Logo" title="Some title" rel="nofollow noopener noreferrer"
							 style="padding-top:10px;">
					</a>
					<div class="media-icons" style="padding-top:10px;">
						<a href="#"
						   target="_blank" title="some also title" rel="nofollow noopener noreferrer"><i class="fab fa-linkedin-in"></i></a>
					</div>

					<label class="nameUser">@UserCode</label>

					<AuthorizeView Roles="Administrateur">
						<Authorized>
							<button @onclick="AdminParameter" class="btnLogout">

								<span class="btnAdmin" aria-hidden="true"></span>
							</button>
						</Authorized>
					</AuthorizeView>
					<button @onclick="UserParameter" class="btnLogout"> <span class="oi oi-cog" aria-hidden="true"></span></button>
					<button @onclick="Deconnexion" class="btnLogout"><span class="oi oi-account-logout" aria-hidden="true"></span></button>

					<!--add translate-->
					<select class="switchLanguage">
						<option value="fr-FR">Français</option>
						<option value="en-US">English</option>
						<option value="es-ES">Español</option>
						<option value="de-DE">Deutsch</option>
					</select>

				</div>
			</div>

		</div>
	</div>
	<SfSidebar class="dockSidebar sideBarMenu" Width="161" DockSize="60px" Target=".e-main-content"
			   EnableDock="true" Position="SidebarPosition.Left" @bind-IsOpen="ToggleSidebar"
			   MediaQuery="(min-width: 2000px)" Type="SidebarType.Auto">
		<ChildContent>
			<div class="dock">
				<ul>
					<li class="sidebar-item" id="toggle">
						<NavLink href="counter" class="linkMenu d-flex align-items-center gap-2 nav-link">
							<span class="sb-icons icon-calendar e-sb-icon control-icon"></span>
							<span class="e-text text-nowrap" title="menu">Menu</span>
						</NavLink>
					</li>
					<li class="sidebar-item">
						<NavLink href="fetchdata" class="linkMenu d-flex align-items-center gap-2 nav-link">
							<span class="sb-icons icon-chart e-sb-icon control-icon"></span>
							<span class="e-text text-nowrap" title="home">Home</span>
						</NavLink>
					</li>
					<AuthorizeView Roles="SomeCondition">
						<Authorized>
							<li class="sidebar-item">
								<NavLink href="fetchdata" class="linkMenu d-flex align-items-center gap-2 nav-link">
									<span class="sb-icons icon-chart e-sb-icon control-icon"></span>
									<span class="e-text" title="profile">Profile</span>
								</NavLink>
							</li>
						</Authorized>
					</AuthorizeView>
				</ul>
			</div>
		</ChildContent>
	</SfSidebar>

	<main class="mainTest">
		<article class="content px-4" style="min-height:100%;">
			@Body
		</article>
	</main>
	<footer>
		<div class="bottom-details">
			<div class="bottom_text">

				<span class="copyright_text">
					Copyright ©  @DateTime.UtcNow.Date.Year
					<a href="#" target="_blank" class="colorRed" title="someTitle" rel="nofollow noopener noreferrer">Some text.</a>All rights reserved
					<span style="color:#8A2336; font-weight:bold;padding-left:2px;">@version</span>
				</span>
				<span class="policy_terms">
					<a>Privacy policy</a>
					<a>Terms & condition</a>
				</span>

			</div>
		</div>
	</footer>
</div>

@code {
	string LangTranslate = "";
	string DrapeauTranslate = "";

	private async void OnSelected(string val)
	{
	}

	private string custom_menu_arrow { get; set; } = "custom-button-close";
	public void OnSelect(ClickEventArgs<ListData> args)
	{
		//JsRuntime.InvokeVoidAsync("open", args.ItemData.Href, "_blank");
		Navigation.NavigateTo(args.ItemData.Href);
	}

	// Specify the value of ListView component DataSource property.
	public List<ListData> List = new List<ListData>
	{
		new ListData {Id="1", Text = "Menu123", IconCss = "sb-icons icon-calendar e-sb-icon control-icon", Href = "/counter"  },
		new ListData {Id="2",Text = "Menu2", IconCss = "sb-icons icon-chart e-sb-icon control-icon", Href = "/fetchdata" },
	};
	public class ListData
	{
		public string Id { get; set; }
		public string Text { get; set; }
		public string IconCss { get; set; }
		public string Href { get; set; }
	}

	public bool ToggleSidebar = false;
	public async void MenuButtonClick()
	{
		ToggleSidebar = !ToggleSidebar;

		if (ToggleSidebar)
		{
			custom_menu_arrow = "custom-button-close";
		}
		else if (!ToggleSidebar)
		{
			custom_menu_arrow = "custom-button-open";
		}
	}

	public string HeaderText = "Header";

	System.Version? appVersion { get; set; }
	string version { get; set; }
	string cookieByUser = "";
	string UserCode = "";

	public async void VerifPrenom()
	{
		if (UserCode != "")
		{
			UserCode = "";
			StateHasChanged();
		}
	}

	protected override async Task OnInitializedAsync()
	{
		if (System.Reflection.Assembly.GetExecutingAssembly().GetName().Version != null)
		{
			appVersion = System.Reflection.Assembly.GetExecutingAssembly().GetName().Version;
			version = String.Format("V{0}", appVersion);
		}

		this.StateHasChanged();
	}

	string Bearer = "";

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		base.OnAfterRender(firstRender);
		if (firstRender)
		{
			StateHasChanged();
		}
		VerifPrenom();
	}

	public async void Deconnexion()
	{
		Bearer = "";

		Navigation.NavigateTo("");

		this.StateHasChanged();
	}

	public void UserParameter()
	{
		Navigation.NavigateTo("userSettings");
	}

	public void AdminParameter()
	{
		Navigation.NavigateTo("admin");
	}
}

<style>
	.linkMenu {
		text-decoration: none;
	}

	.switchLanguage {
		width: 75px;
		margin: 10px;
		font-family: Arial;
		background-color: transparent;
		cursor: pointer;
		border: none;
		outline: none;
		color: #B2AFAF;
		font-size: 13px;
	}

	.e-sidebar.e-left.e-open.e-disable-animation, .e-sidebar.e-right.e-open.e-disable-animation, .e-sidebar.e-right.e-close.e-disable-animation, .e-sidebar.e-left.e-close.e-disable-animation {
		top: 50px;
	}

	#wrapper .content {
		font-size: 14px;
		padding: 15px;
	}
	/* Specifies the Sidebar component related styles */
	.dockSidebar.e-sidebar.e-right.e-close {
		visibility: visible;
		transform: translateX(0%);
	}

	.dockSidebar .e-sb-icon::before {
		font-size: 24px;
	}

	.dockSidebar.e-close .sidebar-item {
		padding: 5px 20px;
	}

	.dockSidebar.e-dock.e-close span.e-text {
		display: none;
	}

	.dockSidebar.e-dock.e-open span.e-text {
		display: inline-block;
	}

	.dockSidebar span.e-icons {
		line-height: 2
	}

	.e-open .e-icons {
		margin-right: 16px;
	}

	.e-open .e-text {
		overflow: hidden;
		text-overflow: ellipsis;
		line-height: 23px;
		font-size: 15px;
	}

	#wrapper .dockSidebar {
		z-index: 20 !important;
	}

	.dockSidebar .e-sb-icon {
		font-family: 'e-icons';
		font-weight: bold;
		text-transform: none;
		-webkit-font-smoothing: antialiased;
		-moz-osx-font-smoothing: grayscale;
	}
	/* Specifies the ListView component icons related styles*/
	.dockSidebar .icon-calendar::before {
		content: '\e876';
	}

	.dockSidebar .icon-chart::before {
		content: '\e88c';
	}

	.dockSidebar .icon-box::before {
		content: '\e884';
	}

	/* Specifies the Toolbar component related styles*/
	.e-folder {
		font-size: 16px;
		font-weight: 500;
	}

	.e-btn:hover, .e-css.e-btn:hover {
		border: none;
		border-color: transparent;
	}

	.e-tbar-btn {
		border: none;
		border-color: transparent;
	}

		.e-tbar-btn:hover {
			border: none;
			border-color: transparent;
		}

		.e-tbar-btn:active {
			border: none;
			border-color: transparent;
		}

		.e-tbar-btn:focus {
			border: none;
			border-color: transparent;
		}

	.e-btn, .e-css.e-btn {
		border: none;
		border-color: transparent;
	}

	.e-tbar-btn .tb-icons {
		font-family: 'e-icons';
		speak: none;
		font-size: 16px;
		text-transform: none;
		color: #8A2336;
	}

	.e-listview .e-list-item {
		font-family: "Lucida Sans Unicode", "Lucida Grande", Sans-Serif;
		color: #8A2336;
		font-weight: bold;
	}

		.e-listview .e-list-item.e-focused, .e-listview .e-list-item.e-focused.e-active.e-checklist, .e-listview .e-list-item:hover {
			background-color: #E4E3E1;
			color: #8A2336;
		}

	.e-toolbar .e-icons {
		font-size: 20px;
	}

	.e-tbar-menu-icon:before {
		content: "\e87d";
	}

	.custom-button-open, .custom-button-open:hover, .custom-button-open:focus, .custom-button-open:active {
		color: #8A2336 !important;
		font-size: 20px !important;
		font-weight: bold;
		background-color: transparent !important;
		border: none !important;
		border-color: transparent !important;
		outline: none !important;
		text-decoration: none !important;
	}

		.custom-button-open:before {
			content: '\e87e';
		}

	.custom-button-close, .custom-button-close:hover, .custom-button-close:focus, .custom-button-close:active {
		color: #8A2336 !important;
		font-size: 20px !important;
		font-weight: bold;
		background-color: transparent !important;
		border: none !important;
		border-color: transparent !important;
		outline: none !important;
		text-decoration: none !important;
	}

		.custom-button-close:before {
			content: '\e87d';
		}

	#header {
		text-align: center;
		background-color: #F2F2F2;
		padding-top: 5px;
		text-align: center;
		padding-left: 5px;
	}

	.main-text-content {
		font-size: 18px;
		text-align: left;
		padding-top: 50px;
		padding-left: 30px;
	}

	.e-sidebar.e-left {
		top: 55px;
	}

	.e-sidebar.e-right {
		top: 55px;
	}

	.main > div {
		padding: 0px !important;
	}

	.e-listview .e-list-icon + .e-list-text {
		margin-bottom: 5px;
		margin-left: 10px;
		color: #999595;
	}

	/*fixer hauteur sidebar-menu*/
	.sideBarMenu {
		background-color: #F2F2F2;
		margin-bottom: -101%;
		padding-bottom: 101%;
		overflow: hidden;
	}

	/*menu open new window for menu*/
	.nav-link .e-list-content {
		padding-left: 47px;
		margin-top: -25px;
		color: blue;
	}

	.nav-link, .nav-link:hover, .nav-link:active, .nav-link:visited, .nav-link:focus {
		padding-left: 2px !important;
		color: blue;
	}

	.btnAdmin:before {
		content: url("");
	}

	/* Content area styles */
	.title {
		font-size: 20px;
	}

	.e-sidebar li {
		list-style-type: none;
		cursor: pointer;
	}

	.e-sidebar ul {
		padding: 0px;
	}


	.e-sidebar span.e-icons {
		color: #c0c2c5;
		line-height: 2
	}

	.e-open .e-icons {
		margin-right: 16px;
	}

	.e-open .e-text {
		overflow: hidden;
		font-size: 15px;
	}

	.sidebar-item {
		text-align: center;
		border-bottom: 1px #e5e5e58a solid;
	}

	.e-sidebar.e-open .sidebar-item {
		padding: 5px 20px;
		color: #c0c2c5;
	}

	.e-sidebar {
		overflow: hidden;
	}

	.main > div {
		padding: 0px !important;
	}
</style>
